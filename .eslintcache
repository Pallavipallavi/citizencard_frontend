[{"C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\reportWebVitals.js":"3","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\HeaderComponent.jsx":"4","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\HomeComponent.jsx":"5","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\CitizenIdComponent.jsx":"6","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\BankAccountComponent.jsx":"7","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\SuccessTelephoneConnectionComponent.jsx":"8","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\TelephoneConnectionComponent.jsx":"9","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\ListTelephoneConnectionComponent.jsx":"10","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\services\\TelephoneConnectionService.jsx":"11","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\Welcome.js":"12","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\UserLogin.js":"13","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\services\\UserRegisterService.js":"14","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\UserRegister.js":"15","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\UpdatePassword.js":"16","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\AdminLoginComponent.js":"17","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\services\\AdminServices.js":"18","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\AdminSignInComponent.js":"19","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\ChangePasswordComponent.js":"20","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\services\\CitizenServices.js":"21","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\services\\BankAccountService.js":"22"},{"size":500,"mtime":499162500000,"results":"23","hashOfConfig":"24"},{"size":2429,"mtime":1610964623149,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":2350,"mtime":1610961902291,"results":"27","hashOfConfig":"24"},{"size":509,"mtime":1610964054390,"results":"28","hashOfConfig":"24"},{"size":10585,"mtime":1610963973051,"results":"29","hashOfConfig":"24"},{"size":6410,"mtime":1610964160313,"results":"30","hashOfConfig":"24"},{"size":1060,"mtime":1610964107086,"results":"31","hashOfConfig":"24"},{"size":9852,"mtime":1610964130301,"results":"32","hashOfConfig":"24"},{"size":3412,"mtime":1610964081910,"results":"33","hashOfConfig":"24"},{"size":523,"mtime":1610447020000,"results":"34","hashOfConfig":"24"},{"size":1141,"mtime":1610965447608,"results":"35","hashOfConfig":"24"},{"size":4153,"mtime":1610912879734,"results":"36","hashOfConfig":"24"},{"size":509,"mtime":1610816734557,"results":"37","hashOfConfig":"24"},{"size":4122,"mtime":1610912874236,"results":"38","hashOfConfig":"24"},{"size":4627,"mtime":1610912868588,"results":"39","hashOfConfig":"24"},{"size":5220,"mtime":1610898858119,"results":"40","hashOfConfig":"24"},{"size":551,"mtime":1610818338258,"results":"41","hashOfConfig":"24"},{"size":4778,"mtime":1610885800129,"results":"42","hashOfConfig":"24"},{"size":3695,"mtime":1610898887171,"results":"43","hashOfConfig":"24"},{"size":273,"mtime":1610818127589,"results":"44","hashOfConfig":"24"},{"size":296,"mtime":1610818227670,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"lhbgmw",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\index.js",[],["98","99"],"C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\App.js",["100"],"import 'bootstrap/dist/css/bootstrap.css'\nimport './App.css';\nimport HeaderComponent from './components/HeaderComponent';\nimport { BrowserRouter as Router ,Switch , Route } from 'react-router-dom'\nimport HomeComponent from './components/HomeComponent';\nimport TelephoneConnectionComponent from './components/TelephoneConnectionComponent';\nimport CitizenIdComponent from './components/CitizenIdComponent';\nimport BankAccountComponent from './components/BankAccountComponent';\nimport ListTelephoneConnectionComponent from './components/ListTelephoneConnectionComponent';\nimport SuccessTelephoneConnectionComponent from './components/SuccessTelephoneConnectionComponent';\nimport Welcome from './components/Welcome.js';\nimport UserLogin from './components/UserLogin';\nimport UserRegister from './components/UserRegister';\nimport UpdatePassword from './components/UpdatePassword';\nimport AdminLoginComponent from './components/AdminLoginComponent';\nimport ChangePasswordComponent from './components/ChangePasswordComponent';\nimport AdminSignInComponent from './components/AdminSignInComponent';\nimport {Redirect} from'react-router-dom';\n\nfunction App() {\n  return (\n    <div >\n      \n       \n        <Router>\n        <Switch>\n        <Route exact path='/' component={Welcome} >\n          <Redirect to=\"/welcome\"/>\n          </Route>\n        <Route path='/welcome' exact component={Welcome} />\n          <Route path='/home' exact component={HomeComponent} />\n          <Route path='/citizenid' component={CitizenIdComponent} />\n          <Route path='/bankaccount' component={BankAccountComponent} />\n          <Route path='/create' component={TelephoneConnectionComponent} />\n          <Route path='/success' component={SuccessTelephoneConnectionComponent} />\n          <Route path='/list' component={ListTelephoneConnectionComponent} />\n          \n          <Route path='/login' component={UserLogin} />\n          <Route path='/register' component={UserRegister} />\n          <Route path='/resetpassword' component={UpdatePassword} />\n          <Route path=\"/updatePassword/:adminUserName\" exact component={ChangePasswordComponent}></Route>\n            <Route path=\"/SignIn\" exact component={AdminSignInComponent}></Route>\n            <Route path=\"/AdminLogin/:adminUserName/:adminPassword\" exact component={AdminLoginComponent}></Route>\n\n          \n        </Switch>\n        </Router>\n       \n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\HeaderComponent.jsx",["101"],"import React, { Component } from 'react';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass HeaderComponent extends Component {\r\n  render() {\r\n\r\n    if (window.location.pathname === '/login' || window.location.pathname === '/resetpassword' || window.location.pathname === '/welcome' || window.location.pathname === '/register'\r\n      || window.location.pathname === '/AdminLogin/:adminUserName/:adminPassword' || window.location.pathname === '/updatePassword/:adminUserName' || window.location.pathname === '/SignIn') return null;\r\n    return (\r\n    \r\n      <div class=\"bg-img\">\r\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n          <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand \" href=\"#\"><b>CITIZEN CARD SYSTEM</b></a>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n              <ul class=\"navbar-nav\">\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link active\" href=\"/home\"><HomeIcon /><b>Home</b></a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link active\" href=\"/citizenid\"><PersonIcon /><b>Citizen Id</b></a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link active\" href=\"/bankaccount\"><AccountBalanceIcon /><b>Bank Account</b></a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link active\" href=\"/create\"><PhoneIcon /><b>Telephone Connection</b></a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                  <a class=\"nav-link active\" href=\"/welcome\"><ExitToAppIcon /><b>Logout</b></a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default HeaderComponent","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\HomeComponent.jsx",[],"C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\CitizenIdComponent.jsx",["102"],"import React, { Component } from 'react';\r\nimport CitizenServices from '../services/CitizenServices';\r\nimport register from './images/register.jpg';\r\nimport HeaderComponent from './HeaderComponent.jsx'\r\n\r\n\r\nclass CitizenIdComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        \r\n        this.state = {\r\n            //citizenId: '',\r\n            citizenName: '',\r\n            citizenAge: '',\r\n            citizenAddress: '',\r\n            citizenEmail: '',\r\n            citizenPhoneNumber: '',\r\n            citizenFatherName: '',\r\n            citizenMotherName: ''\r\n\r\n        }\r\n\r\n       /*/ this.changeCitizenIdHandler = this.changeCitizenIdHandler.bind(this);\r\n        this.changeCitizenNameHandler = this.changeCitizenNameHandler.bind(this);\r\n        this.changeCitizenAgeHandler = this.changeCitizenAgeHandler.bind(this);\r\n        this.changeCitizenAddressHandler = this.changeCitizenAddressHandler.bind(this);\r\n        this.changeCitizenEmailHandler = this.changeCitizenEmailHandler.bind(this);\r\n        this.changeCitizenPhoneNumberHandler = this.changeCitizenPhoneNumberHandler.bind(this);\r\n        this.changeCitizenFatherNameHandler = this.changeCitizenFatherNameHandler.bind(this);\r\n        this.changeCitizenMotherNameHandler = this.changeCitizenMotherNameHandler.bind(this);\r\n        this.saveCitizen = this.saveCitizen.bind(this);\r\n    /*/\r\n    }\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        console.log(this.state)\r\n        console.log(this.state)\r\n\r\n         /*/ let citizen = { citizenId: this.state.citizenId,\r\n               citizenName: this.state.citizenName, \r\n               citizenAge: this.state.citizenAge,\r\n               citizenAddress: this.state.citizenAddress,\r\n               citizenEmail: this.state.citizenEmail,\r\n               citizenPhoneNumber: this.state.citizenPhoneNumber,\r\n               citizenFatherName: this.state.citizenFatherName,\r\n               citizenMotherName: this.state.citizenMotherName\r\n              };\r\n           /*/\r\n           \r\n           \r\n          // console.log('citizen =>' + JSON.stringify(citizen));   \r\n         \r\n           CitizenServices.generateCitizenId(this.state).then(response =>{\r\n            console.log(response)\r\n            \r\n                this.props.history.push('/citizenlist');\r\n            \r\n             })  \r\n           }\r\n           \r\n            \r\n\r\n\r\n    onChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n    /*/\r\n    changeCitizenNameHandler= (event) => {\r\n        this.setState({citizenName: event.target.value});\r\n    }\r\n    changeCitizenAgeHandler= (event) => {\r\n        this.setState({citizenAge: event.target.value});\r\n    }\r\n    changeCitizenAddressHandler= (event) => {\r\n        this.setState({citizenAddress: event.target.value});\r\n    }\r\n    changeCitizenEmailHandler= (event) => {\r\n        this.setState({citizenEmail: event.target.value});\r\n    }\r\n    changeCitizenPhoneNumberHandler= (event) => {\r\n        this.setState({citizenPhoneNumber: event.target.value});\r\n    }\r\n    changeCitizenFatherNameHandler= (event) => {\r\n        this.setState({citizenFatherName: event.target.value});\r\n    }\r\n    changeCitizenMotherNameHandler= (event) => {\r\n        this.setState({citizenMotherName: event.target.value});\r\n    }\r\n    /*/\r\n    cancel(){\r\n        this.props.history.push('/home');\r\n    }\r\n  \r\n    \r\n    \r\n\r\n    render() {\r\n        \r\n            \r\n        return (\r\n            <div>\r\n                <HeaderComponent/>\r\n            \r\n            <div style={{background: `url(${register})`, backgroundRepeat:\"no-repeat\", backgroundSize:\"1200px\" }}>\r\n            <div>\r\n            \r\n            \r\n\r\n                <div className = \"container h-auto\">\r\n                    <div className = \"row\">\r\n                        <div className = \"card p-0 mb-0 col-md-5 offset-md-8 bg-info text-dark\">\r\n                        \r\n                       \r\n                        \r\n                          <h3 className = \"text-center\" style={{backgroundColor: '#FFF200' }}><b>Citizen Registration Form</b></h3>\r\n                    \r\n                       \r\n                    \r\n\r\n                        <div className = \"card-body\">\r\n                          \r\n                            <form onSubmit = {this.submitHandler}>\r\n\r\n                            <form action=\"\" method=\"post\" className=\"was-validated\">\r\n                                 <div className = \"form-group\">\r\n                                    <label><b>Citizen Name</b>.</label>\r\n                                    \r\n                                    <input placeholder=\"Citizen Name\" name=\"citizenName\" className=\"form-control\"  required=\" \"\r\n                                      value={this.state.citizenName} onChange={this.onChange}/>  \r\n                                      <div className=\"valid-feedback text-warning\">Looks Good!</div> \r\n                                      <div className=\"invalid-feedback text-info\">Please fill your name !</div>\r\n                                 </div>\r\n                                 \r\n                               </form>\r\n\r\n                                 <form action=\"\" class=\"was-validated\">\r\n                                 <div className = \"form-group\">\r\n                                    <label><b>Citizen Age</b>.</label>\r\n                                    <input placeholder=\"Citizen Age\" name=\"citizenAge\" className=\"form-control\" required=\" \"\r\n                                      value={this.state.citizenAge} onChange={this.onChange}/> \r\n                                      <div className=\"valid-feedback text-warning\">Valid Age Filled</div> \r\n                                      <div className=\"invalid-feedback text-info\">Please fill your age !</div>  \r\n                                 </div>\r\n                                 </form>\r\n\r\n                                 <form action=\"\" class=\"was-validated\">\r\n                                 <div className = \"form-group\">\r\n                                    <label><b>Citizen Address</b>.</label>\r\n                                    <input placeholder=\"Citizen Address\" name=\"citizenAddress\" className=\"form-control\" required=\" \"\r\n                                      value={this.state.citizenAddress} onChange={this.onChange}/> \r\n                                      <div className=\"valid-feedback text-warning\">Address Filled</div> \r\n                                      <div className=\"invalid-feedback text-info\">Please fill your address !</div>  \r\n                                 </div>\r\n                                </form>\r\n\r\n                                <form action=\"\" class=\"was-validated\">\r\n                                 <div className = \"form-group\">\r\n                                    <label><b>Citizen Email</b>.</label>\r\n                                    <input placeholder=\"abc@yz.com\" name=\"citizenEmail\" className=\"form-control\" required=\" \"\r\n                                      value={this.state.citizenEmail} onChange={this.onChange}/>   \r\n                                      <div className=\"valid-feedback text-warning\">Valid Email Address Filled</div> \r\n                                      <div className=\"invalid-feedback text-info\">Please fill your valid email address !</div>\r\n                                 </div>\r\n                                 </form>\r\n\r\n                                 <form action=\"\" class=\"was-validated\">\r\n                                 <div className = \"form-group\">\r\n                                    <label><b>Citizen Phone Number</b></label>\r\n                                    <input placeholder=\"Citizen Phone Number\" name=\"citizenPhoneNumber\" className=\"form-control\" required=\" \"\r\n                                      value={this.state.citizenPhoneNumber} onChange={this.onChange}/> \r\n                                      <div className=\"valid-feedback text-warning\">Valid Phone Number Filled</div> \r\n                                      <div className=\"invalid-feedback text-info\">Please fill your valid phone number !</div>  \r\n                                 </div>\r\n                                 </form>\r\n\r\n\r\n                                 <form action=\"\" class=\"was-validated\">\r\n                                 <div className = \"form-group\">\r\n                                    <label><b>Citizen Father Name</b>.</label>\r\n                                    <input placeholder=\"Citizen Father Name\" name=\"citizenFatherName\" className=\"form-control\" required=\" \"\r\n                                      value={this.state.citizenFatherName} onChange={this.onChange}/>   \r\n                                      <div className=\"valid-feedback text-warning\">Father's Name Filled</div> \r\n                                      <div className=\"invalid-feedback text-info\">Please fill your father's name !</div>\r\n                                 </div>\r\n                                 </form>\r\n\r\n                                 <form action=\"\" class=\"was-validated\">\r\n                                 <div className = \"form-group\">\r\n                                    <label><b>Citizen Mother Name</b>.</label>\r\n                                    <input placeholder=\"Citizen Mother Name\" name=\"citizenMotherName\" className=\"form-control\" required=\" \"\r\n                                      value={this.state.citizenMotherName} onChange={this.onChange}/>   \r\n                                      <div className=\"valid-feedback text-warning\">Mother's Name Filled</div> \r\n                                      <div className=\"invalid-feedback text-info\">Please fill your mothers's name !</div>\r\n                                      \r\n                                 </div>\r\n                                 </form>\r\n                                  \r\n                                 <button  className=\"btn btn-success mt-1.5\" style={{marginLeft: \"25px\"}} style={{backgroundColor: '#0000A0' }} ><b>Save</b></button>\r\n                                 \r\n                                 <button className=\"btn btn-danger mt-1.5\" onClick={this.cancel.bind(this)}  style={{marginLeft: \"15px\"}} >Cancel</button>\r\n                                 \r\n\r\n                            </form>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n           \r\n        );\r\n    };\r\n}\r\n\r\nexport default CitizenIdComponent","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\BankAccountComponent.jsx",["103"],"import React, { Component } from \"react\";\r\nimport BankAccountService from \"../services/BankAccountService\";\r\nimport HeaderComponent from \"./HeaderComponent\";\r\n\r\n\r\nclass BankAccountComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n\r\n            accountType: \"\",\r\n            accountHolderName: \"\",\r\n            bankName: \"\",\r\n            branchName: \"\",\r\n            citizenPhoneNumber: \"\"\r\n\r\n        }\r\n    }\r\n\r\n    \r\n    changeAccountHolderNameHandler = (e) => {\r\n        this.setState({\r\n            accountHolderName: e.target.value\r\n        })\r\n    }\r\n    changeCitizenPhoneNumberHandler = (e) => {\r\n        this.setState({\r\n            citizenPhoneNumber: e.target.value\r\n        })\r\n    }\r\n\r\n    changeBankNameHandler = (e) => {\r\n        this.setState({\r\n            bankName: e.target.value\r\n        })\r\n    }\r\n\r\n    changeBranchNameHandler = (e) => {\r\n        this.setState({\r\n            branchName: e.target.value\r\n        })\r\n    }\r\n\r\n    changeAccountTypeHandler = (e) => {\r\n        this.setState({\r\n            accountType: e.target.value\r\n        })\r\n    }\r\n\r\n    \r\n   stopSubmission = (e) => {\r\n        e.preventDefault();\r\n        let account = {\r\n            \r\n            accountType: this.state.accountType,\r\n            accountHolderName: this.state.accountHolderName,\r\n            bankName: this.state.bankName,\r\n            branchName: this.state.branchName,\r\n            citizenPhoneNumber: this.state.citizenPhoneNumber\r\n        }\r\n\r\n        BankAccountService.createNewAccount(account)\r\n            .then(response => {\r\n                console.log(response)\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n       \r\n    \r\n\r\n    cancel(){\r\n        this.props.history.push('/home');\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n             <div>\r\n                 <HeaderComponent/>\r\n               {/*  <div className=\"row\">\r\n                    <div class=\"card ml-6 col-md-4 offset-md-3 offset-md-2 mt-5 mb-5 bg-info\"> */}\r\n                \r\n                    {/* <div style={{backgroundImage:`url(${account})`,backgroundRepeat:\"no-repeat\",backgroundSize:\"contain\"}}> */}\r\n                    \r\n                \r\n\r\n                            <div class=\"p-3 mb-2 bg-primary text-white\">\r\n                <div className=\"container mt-2\">\r\n                <h3 style={{textAlign:'center'}}> Account Creation </h3>\r\n                    <marquee><h4>Please Fill the Details for creating bank account</h4></marquee>\r\n                    \r\n\r\n                    <div className = \"card-body \">\r\n                    <form method=\"POST\" onSubmit={this.stopSubmission}>\r\n\r\n                        \r\n\r\n                        <div class=\"p-3 mb-2 bg-light text-dark\">\r\n                        \r\n                            <label><b>Enter your name:</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={this.state.accountHolderName}\r\n                                name=\"accountHolderName\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Please enter your first name and last name\"\r\n                                onChange={this.changeAccountHolderNameHandler}\r\n                            />\r\n                        </div>\r\n\r\n                        \r\n\r\n                        <div class=\"p-3 mb-2 bg-light text-dark\">\r\n                            <label><b>Enter the type of account you want to create:</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={this.state.accountType}\r\n                                name=\"accountType\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Savings, Current or Salary\"\r\n                                onChange={this.changeAccountTypeHandler}\r\n                                required=\"\"\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div class=\"p-3 mb-2 bg-light text-dark\">\r\n                            <label><b>Bank Name:</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={this.state.bankName}\r\n                                name=\"bankName\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Please enter the name of the Bank\"\r\n                                onChange={this.changeBankNameHandler}\r\n                            />\r\n                        </div>\r\n\r\n                        <div class=\"p-3 mb-2 bg-light text-dark\">\r\n                            <label><b>Branch Name:</b></label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={this.state.branchName}\r\n                                name=\"branchName\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Please enter the name of the Branch\"\r\n                                onChange={this.changeBranchNameHandler}\r\n                            />\r\n                        </div>\r\n\r\n                        <div class=\"p-3 mb-2 bg-light text-dark\">\r\n                            <label><b>Mobile:</b></label>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={this.state.citizenPhoneNumber}\r\n                                name=\"citizenPhoneNumber\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"9876543210\"\r\n                                onChange={this.changeCitizenPhoneNumberHandler}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <button class=\"btn btn-success mt-2\"><i>Submit your details</i></button>\r\n                        <button className=\"btn btn-danger mt-2\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}><i>Cancel</i></button>\r\n                    </form>\r\n                    </div>\r\n                {/* </div> */}\r\n                </div>\r\n              \r\n                \r\n                \r\n</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default BankAccountComponent","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\SuccessTelephoneConnectionComponent.jsx",[],"C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\TelephoneConnectionComponent.jsx",["104","105","106"],"import React, { Component } from 'react';\r\nimport TelephoneConnectionService from '../services/TelephoneConnectionService';\r\nimport tele2 from './images/tele2.jpg';\r\nimport HeaderComponent from './HeaderComponent.jsx'\r\n\r\nclass TelephoneConnectionComponent extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n          /* citizenId:'',\r\n           citizenName:'',\r\n           citizenAge:'',\r\n           citizenAddress:'',\r\n           citizenMotherName:'',\r\n           citizenFatherName:'',*/\r\n           fields:{},\r\n            errors:{}\r\n        };\r\n            \r\n        \r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.saveConnection = this.saveConnection.bind(this);\r\n    }\r\n   \r\n   handleChange(e){\r\n    let nam = e.target.name;\r\n    let val = e.target.value;\r\n    this.setState({[nam]: val});\r\n    \r\n   } \r\n  \r\n    saveConnection = (e) => {\r\n        e.preventDefault();\r\n        \r\n        let telephone = {citizenId: this.state.citizenId,citizenName: this.state.citizenName, citizenAge: this.state.citizenAge, citizenAddress: this.state.citizenAddress,\r\n            citizenMotherName: this.state.citizenMotherName,citizenFatherName: this.state.citizenFatherName};\r\n        console.log('telephone => ' + JSON.stringify(telephone));\r\n        if(this.validate()){\r\n        alert(\"Telephone Connection established successfully! \");\r\n        \r\n        TelephoneConnectionService.createNewTelephoneConnection(telephone).then(res=>{\r\n            this.props.history.push('/list');\r\n        });\r\n        }\r\n\r\n        }\r\n\r\n    validate(){\r\n       \r\n        let errors = {};\r\n        let isValid= true;\r\n\r\n        const { citizenId, citizenName,citizenAge,citizenAddress,citizenMotherName,citizenFatherName} = this.state;\r\n        if (!citizenId) {\r\n            isValid= false;\r\n            errors[\"citizenId\"] = \"*Please enter your citizen id!\";\r\n          \r\n        }\r\n        \r\n          if (!citizenName) {\r\n            isValid= false;\r\n            errors[\"citizenName\"] = \"*Please enter your name!\";\r\n          \r\n          }\r\n        if (typeof citizenName !== \"undefined\") {\r\n              \r\n            var pattern = new RegExp(\"^[a-zA-Z ]\");\r\n            if (!pattern.test(citizenName)) {\r\n              isValid = false;\r\n              errors[\"citizenName\"] = \"*Please enter alphabet characters only!\";\r\n            }\r\n        \r\n          }\r\n          if (!citizenAge) {\r\n            isValid= false;\r\n            errors[\"citizenAge\"] = \"*Please enter your age!\";\r\n          \r\n        }\r\n        if (!citizenAddress) {\r\n            isValid= false;\r\n            errors[\"citizenAddress\"] = \"*Please enter your address!\";\r\n          \r\n        }\r\n        if (typeof citizenAddress !== \"undefined\") {\r\n              \r\n            var pattern = new RegExp(\"^[0-9a-zA-Z ]\");\r\n            if (!pattern.test(citizenAddress)) {\r\n              isValid = false;\r\n              errors[\"citizenAddress\"] = \"*Please enter valid address!\";\r\n            }\r\n          }\r\n          if (!citizenMotherName) {\r\n            isValid= false;\r\n            errors[\"citizenMotherName\"] = \"*Please enter your mother's name!\";\r\n          \r\n        }\r\n        if (typeof citizenMotherName !== \"undefined\") {\r\n              \r\n            var pattern = new RegExp(\"^[a-zA-Z ]\");\r\n            if (!pattern.test(citizenMotherName)) {\r\n              isValid = false;\r\n              errors[\"citizenMotherName\"] = \"*Please enter alphabet characters only!\";\r\n            }\r\n          }\r\n          if (!citizenFatherName) {\r\n            isValid= false;\r\n            errors[\"citizenFatherName\"] = \"*Please enter your father's name!\";\r\n          \r\n        }\r\n        if (typeof citizenFatherName !== \"undefined\") {\r\n           \r\n        \r\n            var pattern = new RegExp(\"^[a-zA-Z ]\");\r\n            if (!pattern.test(citizenFatherName)) {\r\n              isValid = false;\r\n              errors[\"citizenFatherName\"] = \"*Please enter alphabet characters only!\";\r\n            }\r\n        }\r\n       \r\n       \r\n          this.setState({\r\n            errors: errors\r\n          });\r\n      \r\n          return isValid;\r\n\r\n    }\r\n    cancel(){\r\n        this.props.history.push('/home');\r\n    }\r\n    view(){\r\n        this.props.history.push('/list');\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HeaderComponent/>\r\n                 <div style={{backgroundImage:`url(${tele2})`,backgroundRepeat:\"no-repeat\",backgroundSize:\"cover\"}}>\r\n            \r\n                        <div className = \" row\">\r\n                            <div className = \"card ml-6 col-md-4 offset-md-3 offset-md-2 mb-5 bg-light mt-2\" >\r\n                                <h3 style={{textAlign:'center'}}> TELEPHONE CONNECTION </h3>\r\n                                <h3 style={{textAlign:'center'}}>Registration Form</h3>\r\n                    \r\n                                <div className = \"card-body\" >\r\n                                    <form class=\"form\">\r\n                                       \r\n                                    <div className = \"form-group \">\r\n                                            <label><b> Citizen Id:</b> </label>\r\n                                            <input type=\"number\" min=\"1\" placeholder=\"Enter your citizen id\" name=\"citizenId\" className=\"form-control\" \r\n                                                value={this.state.citizenId} onChange={this.handleChange}\r\n                                                />\r\n                                                \r\n                                                <div className=\"text-danger\">{this.state.errors.citizenId}</div>\r\n                                               </div> \r\n                                        \r\n                                       \r\n\r\n                                        <div className = \"form-group\">\r\n                                            <label><b> Citizen Name:</b> </label>\r\n                                            <input type=\"text\" name=\"citizenName\" placeholder=\"Enter your name\" value={this.state.citizenName} className=\"form-control\" \r\n                                                 onChange={this.handleChange} />\r\n                                        \r\n                                        <div className=\"text-danger\">{this.state.errors.citizenName}</div>\r\n                                        </div>\r\n\r\n                                        <div className = \"form-group\">\r\n                                            <label><b> Citizen Age:</b> </label>\r\n                                            <input type=\"number\" min=\"18\"placeholder=\"Enter your age\" name=\"citizenAge\" className=\"form-control\" \r\n                                                value={this.state.citizenAge} onChange={this.handleChange}\r\n                                                />\r\n                                                  <div className=\"text-danger\">{this.state.errors.citizenAge}</div>\r\n                                        </div>\r\n                                       \r\n                                        <div className = \"form-group\">\r\n                                            <label> <b> Citizen Address:</b> </label>\r\n                                            <input type=\"text\"placeholder=\"Enter your address\" name=\"citizenAddress\" className=\"form-control\" \r\n                                                value={this.state.citizenAddress} onChange={this.handleChange}\r\n                                            />\r\n                                            <div className=\"text-danger\">{this.state.errors.citizenAddress}</div>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label><b> Citizen Mother Name:</b> </label>\r\n                                            <input type=\"text\" placeholder=\"Enter your mother's name\" name=\"citizenMotherName\" className=\"form-control\" \r\n                                                value={this.state.citizenMotherName} onChange={this.handleChange}\r\n                                                />\r\n                                               <div className=\"text-danger\">{this.state.errors.citizenMotherName}</div>\r\n                                        </div>\r\n                                        <div className = \"form-group\">\r\n                                            <label><b> Citizen Father Name: </b></label>\r\n                                            <input type=\"text\" placeholder=\"Enter your father's name\" name=\"citizenFatherName\" className=\"form-control\" \r\n                                                value={this.state.citizenFatherName} onChange={this.handleChange}\r\n                                               />\r\n                                               <div className=\"text-danger\">{this.state.errors.citizenFatherName}</div>\r\n                                        </div>\r\n                                        \r\n                                    <div className=\"btn-group\">\r\n                                       \r\n                                       <button className=\"btn btn-success\" onClick={this.saveConnection}>Save</button><button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft: \"10px\"}}>Cancel</button>\r\n                                       <button className=\"btn btn-dark\" onClick={this.view.bind(this)} style={{marginLeft: \"10px\"}}>View</button>\r\n                                       </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                   </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TelephoneConnectionComponent;\r\n","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\ListTelephoneConnectionComponent.jsx",[],"C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\services\\TelephoneConnectionService.jsx",[],["107","108"],"C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\Welcome.js",["109","110"],"C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\UserLogin.js",[],"C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\services\\UserRegisterService.js",[],"C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\UserRegister.js",[],"C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\UpdatePassword.js",[],"C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\AdminLoginComponent.js",["111"],"import React, { Component } from 'react';\r\n\r\nimport AdminServices from '../services/AdminServices';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\n\r\nclass AdminLoginComponent extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      adminUserName: \"\",\r\n      adminPassword: \"\", userNameError: \"\",\r\n      passwordError: \"\"\r\n    };\r\n\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n\r\n\r\n    this.validateAdminPassword = this.validateAdminPassword.bind(this);\r\n\r\n    this.validateField = this.validateField.bind(this);\r\n\r\n\r\n  };\r\n  handleBlur(event) {\r\n    const { name } = event.target;\r\n\r\n\r\n    this.validateField(name);\r\n    return;\r\n  }\r\n\r\n\r\n  loginAdmin = (e) => {\r\n    e.preventDefault();\r\n    //    let admin = {adminUserName: this.state.adminUserName, adminPassword: this.state.adminPassword};\r\n    AdminServices.loginAdmin(this.state.adminUserName, this.state.adminPassword).then(res => {\r\n      alert(\"Login Successfully\")\r\n      this.setState({\r\n        reset: true\r\n      });\r\n    }).catch(error => {\r\n      console.log(error)\r\n      alert(\"Please Enter UserName/Password\")\r\n    })\r\n\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    let nam = e.target.name;\r\n    let val = e.target.value;\r\n    this.setState({ [nam]: val });\r\n\r\n\r\n  }\r\n\r\n\r\n  validateField(name) {\r\n    let isValid = false;\r\n\r\n    if (name === \"adminUserName\") isValid = this.validateAdminUserName();\r\n\r\n    else if (name === \"adminPassword\") isValid = this.validateAdminPassword();\r\n\r\n    return isValid;\r\n  }\r\n\r\n\r\n\r\n  validateAdminUserName() {\r\n    let userNameError = \"\";\r\n    const value = this.state.adminUserName;\r\n    if (value.trim() === \"\") userNameError = \"User Name is required\";\r\n\r\n    this.setState({\r\n      userNameError\r\n    });\r\n    return userNameError === \"\";\r\n  }\r\n\r\n  validateAdminPassword() {\r\n    let passwordError = \"\";\r\n    const value = this.state.adminPassword;\r\n    if (value.trim === \"\") passwordError = \"Password is required\";\r\n    // else if (!passwordValidator.test(value))\r\n    //   passwordError =\r\n    //     \"Password must contain at least 8 characters, 1 number, 1 upper and 1 lowercase!\";\r\n\r\n    this.setState({\r\n      passwordError\r\n    });\r\n    return passwordError === \"\";\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    if (this.state.reset) {\r\n\r\n      return <Redirect to={'/list'} />\r\n    }\r\n\r\n    return (\r\n\r\n\r\n\r\n\r\n      <div className=\"page w-100 h-100 mt-5\" style={{\r\n\r\n        \r\n        backgroundColor: \"#dfcfcb\",\r\n        backgroundSize: \"100% 100%\",\r\n        backgroundPosition: \"top center\"\r\n        \r\n    }}>\r\n        <div className=\"row\">\r\n\r\n          <div class=\"col-sm-8 text-center admin\" >\r\n          </div>\r\n          <div class=\"col-sm-4 signin text-center\">\r\n\r\n            <h4 class=\"text-center mt-2\">Welcome Back Admin,</h4>\r\n            <h2 class=\"text-center mt-2\">Login Here!</h2>\r\n\r\n            <form class=\"form1\">\r\n\r\n              <div class=\"form-inline\">\r\n                <label > Username &nbsp;</label>\r\n                <input\r\n                  style={{ borderRadius: \"40px\" }}\r\n\r\n\r\n                  type=\"text\"\r\n                  placeholder=\"User Name\"\r\n                  name=\"adminUserName\"\r\n                  value={this.state.adminUserName}\r\n                  onChange={this.handleChange}\r\n                  onBlur={this.handleBlur}\r\n                  autoComplete=\"off\"\r\n\r\n                  className=\"form-control mt-3\"\r\n\r\n\r\n                />\r\n              </div>\r\n              {/* <div className=\"text-danger\">{this.state.errors.uemailid}</div> */}\r\n              <div class=\"form-inline\">\r\n                <label> Password&nbsp;</label>\r\n\r\n                <input\r\n                  style={{ borderRadius: \"40px\" }}\r\n                  placeholder=\"Password \"\r\n\r\n                  type=\"Password\"\r\n                  name=\"adminPassword\"\r\n                  value={this.state.adminPassword}\r\n                  onChange={this.handleChange}\r\n                  className=\"form-control mt-3\"\r\n                  onChange={this.handleChange}\r\n\r\n                />\r\n              </div>\r\n              {/* <div className=\"text-danger\">{this.state.errors.upass}</div> */}\r\n              <Link class=\"text-left mr-5 font-weight-light text-dark\" to={'/updatePassword/{this.state.adminUserName}'}><em>Forget password?</em></Link>\r\n\r\n              {/* <a class=\"text-left mr-5 font-weight-light text-dark\" href=\"/resetpassword\">Forgot Password? </a> */}\r\n\r\n              <br></br>\r\n              <button className=\"btn btn-dark mt-3 mr-5 xs \" onClick={this.loginAdmin} >Login</button>\r\n              {/* <button className=\"btn btn-dark mt-3 mr-5 xs \" onClick={this.submitHandler} href=\"/homepage\">Log In</button> */}\r\n              <br></br>\r\n              <Link class=\"text-left text-dark mr-5\" to={'/SignIn'}>New User? Register Here</Link>\r\n              {/* <a href=\"/register\" class=\"text-left text-dark mr-5\">New User? Register Here</a> */}\r\n              <br></br>\r\n              <a href=\"/welcome\" class=\"text-left text-dark font-weight-light mr-5\">Homepage</a>\r\n\r\n\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n     \r\n\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default AdminLoginComponent;","C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\services\\AdminServices.js",[],"C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\AdminSignInComponent.js",[],"C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\components\\ChangePasswordComponent.js",[],"C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\services\\CitizenServices.js",[],"C:\\Users\\HP\\Desktop\\telephoneconnection\\src\\services\\BankAccountService.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":23},{"ruleId":"120","severity":1,"message":"121","line":23,"column":13,"nodeType":"122","endLine":23,"endColumn":47},{"ruleId":"123","severity":1,"message":"124","line":199,"column":107,"nodeType":"125","endLine":199,"endColumn":144},{"ruleId":"126","severity":1,"message":"127","line":94,"column":21,"nodeType":"122","endLine":94,"endColumn":30},{"ruleId":"128","severity":1,"message":"129","line":86,"column":17,"nodeType":"118","messageId":"130","endLine":86,"endColumn":24},{"ruleId":"128","severity":1,"message":"129","line":99,"column":17,"nodeType":"118","messageId":"130","endLine":99,"endColumn":24},{"ruleId":"128","severity":1,"message":"129","line":113,"column":17,"nodeType":"118","messageId":"130","endLine":113,"endColumn":24},{"ruleId":"112","replacedBy":"131"},{"ruleId":"114","replacedBy":"132"},{"ruleId":"116","severity":1,"message":"133","line":7,"column":10,"nodeType":"118","messageId":"119","endLine":7,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":19,"column":9,"nodeType":"122","endLine":19,"endColumn":60},{"ruleId":"123","severity":1,"message":"124","line":161,"column":19,"nodeType":"125","endLine":161,"endColumn":47},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'HeaderComponent' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","no-redeclare","'pattern' is already defined.","redeclared",["136"],["137"],"'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]